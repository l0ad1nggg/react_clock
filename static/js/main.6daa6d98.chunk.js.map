{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","now","Date","timeId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","className","React","Component","getRandomName","value","toString","App","hasClock","clockName","timerId","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,IAAK,IAAIC,MAFb,EAKEC,OAAS,EALX,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,OAASE,OAAOC,aAAY,WAC/B,EAAKC,SAAS,CAAEN,IAAK,IAAIC,OAEzBM,QAAQC,KAAK,EAAKT,MAAMC,IAAIS,cAAcC,OAAO,IAAK,MACrD,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAEhCL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDT,KAAKU,MAAMD,SAlBpE,kCAsBE,WACER,OAAOW,cAAcZ,KAAKD,UAvB9B,oBA0BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCb,KAAKU,MAAMD,OAE3C,YAED,sBAAMI,UAAU,cAAhB,SACGb,KAAKJ,MAAMC,IAAIS,cAAcC,OAAO,IAAK,YAlCpD,GAA2BO,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQnB,KAAKD,MAAMqB,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAQX,IAAME,EAAb,4MACEvB,MAAe,CACbwB,UAAU,EACVC,UAAW,WAHf,EAOEC,QAAUrB,OAAOC,aAAY,WAC3B,EAAKC,SAAS,CAAEkB,UAAWL,QAC1B,MATL,uDAWE,WAA2B,IAAD,OACxBO,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKvB,SAAS,CAAEiB,UAAU,OAG5BG,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEiB,UAAU,SAnBhC,kCAuBE,WACER,cAAcZ,KAAKsB,WAxBvB,oBA2BE,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECb,KAAKJ,MAAMwB,UAAY,cAAC,EAAD,CAAOX,KAAMT,KAAKJ,MAAMyB,mBAhCxD,GAAyBP,IAAMC,WCZ/BY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.6daa6d98.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  now: Date;\n};\n\nexport class Clock extends React.Component<Props> {\n  state: State = {\n    now: new Date(),\n  };\n\n  timeId = 0;\n\n  componentDidMount(): void {\n    this.timeId = window.setInterval(() => {\n      this.setState({ now: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.now.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timeId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{this.props.name}</strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.now.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  // This code starts a timer\n  timerId = window.setInterval(() => {\n    this.setState({ clockName: getRandomName() });\n  }, 3300);\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}